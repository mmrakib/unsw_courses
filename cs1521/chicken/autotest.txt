./check_features_used.sh chicken.c
dcc -fsanitize=address -o chicken $(ls *.c|grep -vF chicken.c) chicken.c
chicken.c:402:13: warning: using the result of an assignment as a condition without parentheses [-Wparentheses]
    if (dir = opendir(pathname)) {
        ~~~~^~~~~~~~~~~~~~~~~~~
chicken.c:402:13: note: place parentheses around the assignment to silence this warning
    if (dir = opendir(pathname)) {
            ^
        (                      )
chicken.c:402:13: note: use '==' to turn this assignment into an equality comparison
    if (dir = opendir(pathname)) {
            ^
            ==[0m
dcc explanation: When checking for equality in the condition on line 402 of `chicken.c`, try using a double equals sign (`==`) instead of a single equals sign (`=`).

dcc -fsanitize=memory -o chicken $(ls *.c|grep -vF chicken.c) chicken.c
chicken.c:402:13: warning: using the result of an assignment as a condition without parentheses [-Wparentheses]
    if (dir = opendir(pathname)) {
        ~~~~^~~~~~~~~~~~~~~~~~~
chicken.c:402:13: note: place parentheses around the assignment to silence this warning
    if (dir = opendir(pathname)) {
            ^
        (                      )
chicken.c:402:13: note: use '==' to turn this assignment into an equality comparison
    if (dir = opendir(pathname)) {
            ^
            ==[0m
dcc explanation: When checking for equality in the condition on line 402 of `chicken.c`, try using a double equals sign (`==`) instead of a single equals sign (`=`).

Test test42_subset3_directory (chicken -l examples/1_file.subdirectory.egg) - passed
Test test43_subset3_directory (chicken -l examples/3_files.subdirectory.egg) - passed
Test test44_subset3_directory (chicken -l examples/lecture_code.subdirectory.egg) - passed
Test test45_subset3_directory (chicken -l examples/all_the_modes.subdirectory.egg) - passed
Test test46_subset3_directory (chicken -x examples/1_file.subdirectory.egg) - passed
Test test47_subset3_directory (chicken -x examples/3_files.subdirectory.egg) - passed
Test test48_subset3_directory (chicken -x examples/lecture_code.subdirectory.egg) - passed
Test test49_subset3_directory (chicken -x examples/all_the_modes.subdirectory.egg) - passed
Test test50_subset3_directory (chicken -c a.egg hello/hello.txt) - failed (errors)
Your program produced these errors:
hello/hello.txt: No such file or directory
find: `hello': No such file or directory
stat: missing operand
Try 'stat --help' for more information.
You can reproduce this test by executing these commands:
  dcc -fsanitize=address -o chicken $(ls *.c|grep -vF chicken.c) chicken.c
  rm -rf tmp
  mkdir tmp
  cd tmp
  umask 0000
  rsync -a  ../examples/1_file.subdirectory.d/ ./
  ../chicken -c a.egg hello/hello.txt
  rm -rf hello goodbye *.txt
  1521 chicken -x a.egg
  rm a.egg
  md5sum $(find . -type f | sort) </dev/null
  stat -c '%A %a %n' $(find hello | sort)
  rm -rf tmp
  umask 0027
Test test51_subset3_directory (chicken -c a.egg hello/hello.txt goodbye/last_goodbye.txt these_days.txt) - failed (errors)
Your program produced these errors:
hello/hello.txt: No such file or directory
find: `*': No such file or directory
stat: missing operand
Try 'stat --help' for more information.
You can reproduce this test by executing these commands:
  dcc -fsanitize=address -o chicken $(ls *.c|grep -vF chicken.c) chicken.c
  rm -rf tmp
  mkdir tmp
  cd tmp
  umask 0000
  rsync -a  ../examples/3_files.subdirectory.d/ ./
  ../chicken -c a.egg hello/hello.txt goodbye/last_goodbye.txt these_days.txt
  rm -rf hello goodbye *.txt
  1521 chicken -x a.egg
  rm a.egg
  md5sum $(find . -type f | sort) </dev/null
  stat -c '%A %a %n' $(find * | sort)
  rm -rf tmp
  umask 0027
Test test52_subset3_directory (chicken -c a.egg hello) - passed
Test test53_subset3_directory (chicken -c a.egg hello goodbye) - passed
Test test54_subset3_directory (chicken -c ../a.egg . | sort) - passed
Test test55_subset3_directory (chicken -c a.egg code | sort) - passed
Test test56_subset3_directory (chicken -c a.egg dir1 | sort) - passed
Test test57_subset3_long_listing (chicken -L examples/3_files.7-bit.egg) - failed (Incorrect output)
Your program produced these 2 lines of output:
-rw-r--r--  7     56  hello.txt
r--\x10  45  18446744073709551615  odbye.txt\ufffd

The correct 3 lines of output for this test were:
-rw-r--r--  7     56  hello.txt
-rw-r--r--  7    166  last_goodbye.txt
-rw-r--r--  7    148  these_days.txt

The difference between your output(-) and the correct output(+) is:
  -rw-r--r--  7     56  hello.txt
- r--  45  18446744073709551615  odbye.txtï¿½
+ -rw-r--r--  7    166  last_goodbye.txt
+ -rw-r--r--  7    148  these_days.txt
You can reproduce this test by executing these commands:
  dcc -fsanitize=address -o chicken $(ls *.c|grep -vF chicken.c) chicken.c
  rm -rf tmp
  mkdir tmp
  cd tmp
  umask 0000
  ../chicken -L ../examples/3_files.7-bit.egg
  rm -rf tmp
  umask 0027
Test test58_subset3_7_bit_format (chicken -x examples/small.7-bit.egg) - failed (Incorrect output)
Your program produced these 6 lines of output:
Extracting: a
Extracting: x
-rw-r--r-- 644 ./a
-rw-r--r-- 644 ./x
840ca77e1b4223305365f62d4e0b4bb9  ./a
c1de935e26f7c7d3bd02ed4ba0184b0d  ./x

The correct 6 lines of output for this test were:
Extracting: a
Extracting: x
-rw-r--r-- 644 ./a
-rw-r--r-- 644 ./x
3b5d5c3712955042212316173ccf37be  ./a
009520053b00386d1173f3988c55d192  ./x

The difference between your output(-) and the correct output(+) is:
...
  -rw-r--r-- 644 ./x
- 840ca77e1b4223305365f62d4e0b4bb9  ./a
- c1de935e26f7c7d3bd02ed4ba0184b0d  ./x
+ 3b5d5c3712955042212316173ccf37be  ./a
+ 009520053b00386d1173f3988c55d192  ./x
You can reproduce this test by executing these commands:
  dcc -fsanitize=address -o chicken $(ls *.c|grep -vF chicken.c) chicken.c
  rm -rf tmp
  mkdir tmp
  cd tmp
  umask 0000
  ../chicken -x ../examples/small.7-bit.egg
  stat -c '%A %a %n' $(find . -type f | sort)
  md5sum $(find . -type f | sort) </dev/null
  rm -rf tmp
  umask 0027
Test test59_subset3_directory (chicken -x examples/3_files.subdirectory.7-bit.egg) - failed (errors)
Your program produced these errors:

Execution stopped because too much data written.
Execution stopped in write_content_to_file(stream=0x616000000080, output=0x616000000680) in chicken.c at line 275:

    goto_pos(stream, 20 + pathlen, SEEK_CUR);

    uint8_t byte;
    for (int i = 0; i < contentlen; i++) {
        byte = fgetc(stream);
-->     fputc(byte, output);
    }

    goto_pos(stream, start_pos, SEEK_SET);

Values when execution stopped:

byte = 255 '\377'
contentlen = 18446744073709551615
i = 8196096
pathlen = 11634
start_pos = 239

Function Call Traceback
write_content_to_file(stream=0x616000000080, output=0x616000000680) called at line 302 of chicken.c
extract_egglet_to_file(stream=0x616000000080, pathname=0x626000000100 "-r--\017") called at line 471 of chicken.c
extract_egg(egg_pathname=0x7ffdcf787dfe "../examples/3_files.subdirectory.7-bit.egg") called at line 77 of chicken_main.c
main(argc=3, argv=0x7ffdcf787b48)
You can reproduce this test by executing these commands:
  dcc -fsanitize=address -o chicken $(ls *.c|grep -vF chicken.c) chicken.c
  rm -rf tmp
  mkdir tmp
  cd tmp
  umask 0000
  ../chicken -x ../examples/3_files.subdirectory.7-bit.egg
  md5sum $(find . -type f | sort) </dev/null
  diff -sr ../examples/3_files.subdirectory.d .
  rm -rf tmp
  umask 0027
Test test60_subset3_7_bit_format (chicken -7 -c 10.egg 10.txt) - failed (Incorrect output)
Your program produced these 4 lines of output:
Adding: 10.txt
00000000: 6337 2d72 772d 7277 2d72 2d2d 0600 3130  c7-rw-rw-r--..10
00000010: 2e74 7874 1500 0000 0000 310a 320a 330a  .txt......1.2.3.
00000020: 340a 350a 360a 370a 380a 390a 3130 0abf  4.5.6.7.8.9.10..

The correct 4 lines of output for this test were:
Adding: 10.txt
00000000: 6337 2d72 772d 7277 2d72 2d2d 0600 3130  c7-rw-rw-r--..10
00000010: 2e74 7874 1500 0000 0000 6229 90a6 629a  .txt......b)..b.
00000020: 0a6a 29b0 a6e2 9c0a 7229 8b01 4010       .j).....r)..@.

The difference between your output(-) and the correct output(+) is:
...
  00000000: 6337 2d72 772d 7277 2d72 2d2d 0600 3130  c7-rw-rw-r--..10
- 00000010: 2e74 7874 1500 0000 0000 310a 320a 330a  .txt......1.2.3.
?                                    ^^  ^^ ^ -----            ^ - ^

+ 00000010: 2e74 7874 1500 0000 0000 6229 90a6 629a  .txt......b)..b.
?                                    ^^^^^^  ^^^ ^             ^^  ^

- 00000020: 340a 350a 360a 370a 380a 390a 3130 0abf  4.5.6.7.8.9.10..
+ 00000020: 0a6a 29b0 a6e2 9c0a 7229 8b01 4010       .j).....r)..@.
You can reproduce this test by executing these commands:
  dcc -fsanitize=address -o chicken $(ls *.c|grep -vF chicken.c) chicken.c
  rm -rf tmp
  mkdir tmp
  cd tmp
  umask 0000
  seq 1 10 >10.txt
  chmod 664 10.txt
  ../chicken -7 -c 10.egg 10.txt
  xxd 10.egg
  rm -rf tmp
  umask 0027
Test test61_subset3_7_bit_format (chicken -7 -c 3_files.egg hello.txt last_goodbye.txt these_days.txt) - failed (Incorrect output)
Your program produced these 33 lines of output:
Adding: hello.txt
Adding: last_goodbye.txt
Adding: these_days.txt
00000000: 6337 2d72 772d 7277 2d72 772d 0900 6865  c7-rw-rw-rw-..he
00000010: 6c6c 6f2e 7478 7438 0000 0000 0048 656c  llo.txt8.....Hel
00000020: 6c6f 2043 4f4d 5031 3532 310a 4920 686f  lo COMP1521.I ho
00000030: 7065 2079 6f75 2061 7265 2065 6e6a 6f79  pe you are enjoy
00000040: 696e 6720 7468 6973 2061 7373 6967 6e6d  ing this assignm
00000050: 656e 742e 0a02 6337 2d72 772d 7277 2d72  ent...c7-rw-rw-r
00000060: 772d 1000 6c61 7374 5f67 6f6f 6462 7965  w-..last_goodbye
00000070: 2e74 7874 a600 0000 0000 5468 6973 2069  .txt......This i
00000080: 7320 6f75 7220 6c61 7374 2067 6f6f 6462  s our last goodb
00000090: 7965 0a49 2068 6174 6520 746f 2066 6565  ye.I hate to fee
000000a0: 6c20 7468 6520 6c6f 7665 2062 6574 7765  l the love betwe
000000b0: 656e 2075 7320 6469 650a 4275 7420 6974  en us die.But it
000000c0: 2773 206f 7665 720a 4a75 7374 2068 6561  's over.Just hea
000000d0: 7220 7468 6973 2061 6e64 2074 6865 6e20  r this and then 
000000e0: 4927 6c6c 2067 6f0a 596f 7520 6761 7665  I'll go.You gave
000000f0: 206d 6520 6d6f 7265 2074 6f20 6c69 7665   me more to live
00000100: 2066 6f72 0a4d 6f72 6520 7468 616e 2079   for.More than y
00000110: 6f75 276c 6c20 6576 6572 206b 6e6f 770a  ou'll ever know.
00000120: af63 372d 7277 2d72 772d 7277 2d0e 0074  .c7-rw-rw-rw-..t
00000130: 6865 7365 5f64 6179 732e 7478 7494 0000  hese_days.txt...
00000140: 0000 0074 6865 7365 2064 6179 7320 7475  ...these days tu
00000150: 726e 6564 206f 7574 206e 6f74 6869 6e67  rned out nothing
00000160: 206c 696b 6520 6920 6861 6420 706c 616e   like i had plan
00000170: 6e65 640a 636f 6e74 726f 6c20 7765 6c6c  ned.control well
00000180: 2069 7427 7320 736c 6970 7069 6e67 2072   it's slipping r
00000190: 6967 6874 2074 6872 6f75 6768 206d 7920  ight through my 
000001a0: 6861 6e64 730a 7468 6573 6520 6461 7973  hands.these days
000001b0: 2074 7572 6e65 6420 6f75 7420 6e6f 7468   turned out noth
000001c0: 696e 6720 6c69 6b65 2069 2068 6164 2070  ing like i had p
...


The correct 30 lines of output for this test were:
Adding: hello.txt
Adding: last_goodbye.txt
Adding: these_days.txt
00000000: 6337 2d72 772d 7277 2d72 772d 0900 6865  c7-rw-rw-rw-..he
00000010: 6c6c 6f2e 7478 7438 0000 0000 0091 9766  llo.txt8.......f
00000020: cde8 21cf 9b41 8b56 4c45 4941 a37f 0ca8  ..!..A.VLEIA....
00000030: 3cef ea83 0f2c a832 eed5 bfce 9dd9 d074  <....,.2.......t
00000040: d1a7 9a0c 3cf9 e9cf bb6e 5ddd 170a 6363  ....<....n]...cc
00000050: 372d 7277 2d72 772d 7277 2d10 006c 6173  7-rw-rw-rw-..las
00000060: 745f 676f 6f64 6279 652e 7478 74a6 0000  t_goodbye.txt...
00000070: 0000 00a9 a34f 341a 79a0 dfd7 920d 9879  .....O4.y......y
00000080: f441 9f7e fc98 bce5 1525 068c 3d32 a0e9  .A.~.....%..=2..
00000090: bd06 6cb9 7620 e9a3 2a0d 9bfb 6541 8b2f  ..l.v ..*...eA./
000000a0: 4ef9 72ee 41d7 9a0c 9a72 8a85 d7a2 0d3d  N.r.A....r.....=
000000b0: 13f3 41bf b65e 42a5 75e7 d106 8cb8 7920  ..A..^B.u.....y 
000000c0: e9a3 4f34 1877 6441 d346 5dc8 24a7 d9b1  ..O4.wdA.F].$...
000000d0: 067d e2ac efea 833e 1ed9 506d ca83 6efe  .}.....>..Pm..n.
000000e0: 5950 74de 8366 9ed9 5066 dfc8 54dd fcb2  YPt..f..Pf..T...
000000f0: a0e9 a30e e41e 77f5 4fb3 620c bdb2 f241  ......w.O.b....A
00000100: af76 fee2 8003 6337 2d72 772d 7277 2d72  .v....c7-rw-rw-r
00000110: 772d 0e00 7468 6573 655f 6461 7973 2e74  w-..these_days.t
00000120: 7874 9400 0000 0000 e9a3 2f3c a832 61f3  xt......../<.2a.
00000130: cd07 4ebc b765 c883 7f5e 8837 6fe9 a34e  ..N..e...^.7o..N
00000140: ece8 3669 d795 0694 1a30 e441 c366 1ddb  ..6i.....0.A.f..
00000150: b2e4 158f 7eee 9cb7 ec41 df2e cd88 34f4  ....~....A....4.
00000160: 4fcd 073d 9a78 70d3 bb3a 0e5a 73e8 e883  O..=.xp..:.Zs...
00000170: a68e 5bfa e7d0 836f 941a 30ee c9cc 574d  ..[....o..0...WM
00000180: 1979 e541 930f 9e68 3a75 e5bb 2e44 1bfa  .y.A...h:u...D..
00000190: f441 bb7f 4d1a 7767 41b3 4ebc a834 a0d1  .A..M.wgA.N..4..
000001a0: 8722 0e1b 30ee dd97 20a0 e4              ."..0... ..

The difference between your output(-) and the correct output(+) is:
...
  00000000: 6337 2d72 772d 7277 2d72 772d 0900 6865  c7-rw-rw-rw-..he
- 00000010: 6c6c 6f2e 7478 7438 0000 0000 0048 656c  llo.txt8.....Hel
?                                           ^^^ - -               ^^^

+ 00000010: 6c6c 6f2e 7478 7438 0000 0000 0091 9766  llo.txt8.......f
?                                           ^^^^^                 ^^^

- 00000020: 6c6f 2043 4f4d 5031 3532 310a 4920 686f  lo COMP1521.I ho
- 00000030: 7065 2079 6f75 2061 7265 2065 6e6a 6f79  pe you are enjoy
- 00000040: 696e 6720 7468 6973 2061 7373 6967 6e6d  ing this assignm
+ 00000020: cde8 21cf 9b41 8b56 4c45 4941 a37f 0ca8  ..!..A.VLEIA....
+ 00000030: 3cef ea83 0f2c a832 eed5 bfce 9dd9 d074  <....,.2.......t
+ 00000040: d1a7 9a0c 3cf9 e9cf bb6e 5ddd 170a 6363  ....<....n]...cc
+ 00000050: 372d 7277 2d72 772d 7277 2d10 006c 6173  7-rw-rw-rw-..las
+ 00000060: 745f 676f 6f64 6279 652e 7478 74a6 0000  t_goodbye.txt...
+ 00000070: 0000 00a9 a34f 341a 79a0 dfd7 920d 9879  .....O4.y......y
+ 00000080: f441 9f7e fc98 bce5 1525 068c 3d32 a0e9  .A.~.....%..=2..
+ 00000090: bd06 6cb9 7620 e9a3 2a0d 9bfb 6541 8b2f  ..l.v ..*...eA./
+ 000000a0: 4ef9 72ee 41d7 9a0c 9a72 8a85 d7a2 0d3d  N.r.A....r.....=
+ 000000b0: 13f3 41bf b65e 42a5 75e7 d106 8cb8 7920  ..A..^B.u.....y 
+ 000000c0: e9a3 4f34 1877 6441 d346 5dc8 24a7 d9b1  ..O4.wdA.F].$...
+ 000000d0: 067d e2ac efea 833e 1ed9 506d ca83 6efe  .}.....>..Pm..n.
+ 000000e0: 5950 74de 8366 9ed9 5066 dfc8 54dd fcb2  YPt..f..Pf..T...
+ 000000f0: a0e9 a30e e41e 77f5 4fb3 620c bdb2 f241  ......w.O.b....A
- 00000050: 656e 742e 0a02 6337 2d72 772d 7277 2d72  ent...c7-rw-rw-r
?       -    ^^ ^^^ ^^ - ^                           ^^^

+ 00000100: af76 fee2 8003 6337 2d72 772d 7277 2d72  .v....c7-rw-rw-r
?      +    +++ ^^ ^ ^^  ^                           ^^^

+ 00000110: 772d 0e00 7468 6573 655f 6461 7973 2e74  w-..these_days.t
+ 00000120: 7874 9400 0000 0000 e9a3 2f3c a832 61f3  xt......../<.2a.
+ 00000130: cd07 4ebc b765 c883 7f5e 8837 6fe9 a34e  ..N..e...^.7o..N
+ 00000140: ece8 3669 d795 0694 1a30 e441 c366 1ddb  ..6i.....0.A.f..
You can reproduce this test by executing these commands:
  dcc -fsanitize=address -o chicken $(ls *.c|grep -vF chicken.c) chicken.c
  rm -rf tmp
  mkdir tmp
  cd tmp
  umask 0000
  cp ../examples/3_files.d/*.txt .
  chmod 666 *.txt
  ../chicken -7 -c 3_files.egg hello.txt last_goodbye.txt these_days.txt
  xxd 3_files.egg
  rm -rf tmp
  umask 0027
Test test62_subset3_7_bit_format (chicken -7 -c binary_file.egg 256.bin) - failed (No stderr produced)
Your program produced no output
You can reproduce this test by executing these commands:
  dcc -fsanitize=address -o chicken $(ls *.c|grep -vF chicken.c) chicken.c
  rm -rf tmp
  mkdir tmp
  cd tmp
  umask 0000
  cp ../examples/binary_file.d/256.bin .
  chmod 755 *.*
  ../chicken -7 -c binary_file.egg 256.bin
  rm -rf tmp
  umask 0027
Test test63_subset3_long_listing (chicken -L examples/tiny.6-bit.egg) - passed
Test test64_subset3_6_bit_format (chicken -x examples/small.6-bit.egg) - failed (Incorrect output)
Your program produced these 6 lines of output:
Extracting: a
Extracting: x
-rw-r--r-- 644 ./a
-rw-r--r-- 644 ./x
79b427e4e190e7f835afb525b89ed669  ./a
54ed8b4f2ab343230f9e09ac9b170fbb  ./x

The correct 6 lines of output for this test were:
Extracting: a
Extracting: x
-rw-r--r-- 644 ./a
-rw-r--r-- 644 ./x
3b5d5c3712955042212316173ccf37be  ./a
009520053b00386d1173f3988c55d192  ./x

The difference between your output(-) and the correct output(+) is:
...
  -rw-r--r-- 644 ./x
- 79b427e4e190e7f835afb525b89ed669  ./a
- 54ed8b4f2ab343230f9e09ac9b170fbb  ./x
+ 3b5d5c3712955042212316173ccf37be  ./a
+ 009520053b00386d1173f3988c55d192  ./x
You can reproduce this test by executing these commands:
  dcc -fsanitize=address -o chicken $(ls *.c|grep -vF chicken.c) chicken.c
  rm -rf tmp
  mkdir tmp
  cd tmp
  umask 0000
  ../chicken -x ../examples/small.6-bit.egg
  stat -c '%A %a %n' $(find . -type f | sort)
  md5sum $(find . -type f | sort) </dev/null
  rm -rf tmp
  umask 0027
Test test65_subset3_6_bit_format (chicken -6 -c 10.egg 10.txt) - failed (Incorrect output)
Your program produced these 4 lines of output:
Adding: 10.txt
00000000: 6336 2d72 772d 7277 2d72 2d2d 0600 3130  c6-rw-rw-r--..10
00000010: 2e74 7874 1500 0000 0000 310a 320a 330a  .txt......1.2.3.
00000020: 340a 350a 360a 370a 380a 390a 3130 0a1e  4.5.6.7.8.9.10..

The correct 4 lines of output for this test were:
Adding: 10.txt
00000000: 6336 2d72 772d 7277 2d72 2d2d 0600 3130  c6-rw-rw-r--..10
00000010: 2e74 7874 1500 0000 0000 5425 825c 2602  .txt......T%.\\&.
00000020: 6426 826c 2702 7425 5408 81              d&.l'.t%T..

The difference between your output(-) and the correct output(+) is:
...
  00000000: 6336 2d72 772d 7277 2d72 2d2d 0600 3130  c6-rw-rw-r--..10
- 00000010: 2e74 7874 1500 0000 0000 310a 320a 330a  .txt......1.2.3.
?                                    ^^ --- -------            ^ ^ --

+ 00000010: 2e74 7874 1500 0000 0000 5425 825c 2602  .txt......T%.\&.
?                                    ^^^^^^^^^^^^              ^^ ^^

- 00000020: 340a 350a 360a 370a 380a 390a 3130 0a1e  4.5.6.7.8.9.10..
+ 00000020: 6426 826c 2702 7425 5408 81              d&.l'.t%T..
You can reproduce this test by executing these commands:
  dcc -fsanitize=address -o chicken $(ls *.c|grep -vF chicken.c) chicken.c
  rm -rf tmp
  mkdir tmp
  cd tmp
  umask 0000
  seq 1 10 >10.txt
  chmod 664 10.txt
  ../chicken -6 -c 10.egg 10.txt
  xxd 10.egg
  rm -rf tmp
  umask 0027
Test test66_subset3_long_listing (chicken -L examples/all_three_formats.6-bit.egg) - failed (Incorrect output)
Your program produced these 2 lines of output:
-rw-r--r--  7     56  hello.txt
r--\x0e  45  18446744073709551615  ays.txt\ufffd

The correct 4 lines of output for this test were:
-rw-r--r--  7     56  hello.txt
-r--rw-r--  6    148  these_days.txt
-r--r--r--  7    166  last_goodbye.txt
-rw-r--r--  8    256  256.bin

The difference between your output(-) and the correct output(+) is:
  -rw-r--r--  7     56  hello.txt
- r--  45  18446744073709551615  ays.txtï¿½
+ -r--rw-r--  6    148  these_days.txt
+ -r--r--r--  7    166  last_goodbye.txt
+ -rw-r--r--  8    256  256.bin
You can reproduce this test by executing these commands:
  dcc -fsanitize=address -o chicken $(ls *.c|grep -vF chicken.c) chicken.c
  rm -rf tmp
  mkdir tmp
  cd tmp
  umask 0000
  ../chicken -L ../examples/all_three_formats.6-bit.egg
  rm -rf tmp
  umask 0027
Test test67_subset3_6_bit_format (chicken -x examples/all_three_formats.6-bit.egg) - failed (errors)
Your program produced these errors:

Execution stopped because too much data written.
Execution stopped in write_content_to_file(stream=0x616000000080, output=0x616000000680) in chicken.c at line 275:

    goto_pos(stream, 20 + pathlen, SEEK_CUR);

    uint8_t byte;
    for (int i = 0; i < contentlen; i++) {
        byte = fgetc(stream);
-->     fputc(byte, output);
    }

    goto_pos(stream, start_pos, SEEK_SET);

Values when execution stopped:

byte = 255 '\377'
contentlen = 18446744073709551615
i = 8196096
pathlen = 25695
start_pos = 86

Function Call Traceback
write_content_to_file(stream=0x616000000080, output=0x616000000680) called at line 302 of chicken.c
extract_egglet_to_file(stream=0x616000000080, pathname=0x62b000000200 "ays.txt\224") called at line 471 of chicken.c
extract_egg(egg_pathname=0x7fff70a02e01 "../examples/all_three_formats.6-bit.egg") called at line 77 of chicken_main.c
main(argc=3, argv=0x7fff70a02978)
You can reproduce this test by executing these commands:
  dcc -fsanitize=address -o chicken $(ls *.c|grep -vF chicken.c) chicken.c
  rm -rf tmp
  mkdir tmp
  cd tmp
  umask 0000
  ../chicken -x ../examples/all_three_formats.6-bit.egg
  stat -c '%A %a %n' $(find . -type f | sort)
  md5sum $(find . -type f | sort) </dev/null
  rm -rf tmp
  umask 0027
Test test68_subset3_7_bit_format (chicken -c 4_files.egg 256.bin) - failed (Incorrect output)
Your program produced these 52 lines of output:
Adding: 256.bin
Adding: hello.txt
Adding: last_goodbye.txt
Adding: these_days.txt
00000000: 6338 2d72 2d2d 2d77 2d72 2d2d 0700 3235  c8-r---w-r--..25
00000010: 362e 6269 6e00 0100 0000 0000 0102 0304  6.bin...........
00000020: 0506 0708 090a 0b0c 0d0e 0f10 1112 1314  ................
00000030: 1516 1718 191a 1b1c 1d1e 1f20 2122 2324  ........... !"#$
00000040: 2526 2728 292a 2b2c 2d2e 2f30 3132 3334  %&'()*+,-./01234
00000050: 3536 3738 393a 3b3c 3d3e 3f40 4142 4344  56789:;<=>?@ABCD
00000060: 4546 4748 494a 4b4c 4d4e 4f50 5152 5354  EFGHIJKLMNOPQRST
00000070: 5556 5758 595a 5b5c 5d5e 5f60 6162 6364  UVWXYZ[\\]^_`abcd
00000080: 6566 6768 696a 6b6c 6d6e 6f70 7172 7374  efghijklmnopqrst
00000090: 7576 7778 797a 7b7c 7d7e 7f80 8182 8384  uvwxyz{|}~......
000000a0: 8586 8788 898a 8b8c 8d8e 8f90 9192 9394  ................
000000b0: 9596 9798 999a 9b9c 9d9e 9fa0 a1a2 a3a4  ................
000000c0: a5a6 a7a8 a9aa abac adae afb0 b1b2 b3b4  ................
000000d0: b5b6 b7b8 b9ba bbbc bdbe bfc0 c1c2 c3c4  ................
000000e0: c5c6 c7c8 c9ca cbcc cdce cfd0 d1d2 d3d4  ................
000000f0: d5d6 d7d8 d9da dbdc ddde dfe0 e1e2 e3e4  ................
00000100: e5e6 e7e8 e9ea ebec edee eff0 f1f2 f3f4  ................
00000110: f5f6 f7f8 f9fa fbfc fdfe ff9d 6337 2d72  ............c7-r
00000120: 2d2d 2d77 2d72 2d2d 0900 6865 6c6c 6f2e  ---w-r--..hello.
00000130: 7478 7438 0000 0000 0048 656c 6c6f 2043  txt8.....Hello C
00000140: 4f4d 5031 3532 310a 4920 686f 7065 2079  OMP1521.I hope y
00000150: 6f75 2061 7265 2065 6e6a 6f79 696e 6720  ou are enjoying 
00000160: 7468 6973 2061 7373 6967 6e6d 656e 742e  this assignment.
00000170: 0a1d 6337 2d72 2d2d 2d77 2d72 2d2d 1000  ..c7-r---w-r--..
00000180: 6c61 7374 5f67 6f6f 6462 7965 2e74 7874  last_goodbye.txt
00000190: a600 0000 0000 5468 6973 2069 7320 6f75  ......This is ou
000001a0: 7220 6c61 7374 2067 6f6f 6462 7965 0a49  r last goodbye.I
000001b0: 2068 6174 6520 746f 2066 6565 6c20 7468   hate to feel th
...


The correct 48 lines of output for this test were:
Adding: 256.bin
Adding: hello.txt
Adding: last_goodbye.txt
Adding: these_days.txt
00000000: 6338 2d72 2d2d 2d77 2d72 2d2d 0700 3235  c8-r---w-r--..25
00000010: 362e 6269 6e00 0100 0000 0000 0102 0304  6.bin...........
00000020: 0506 0708 090a 0b0c 0d0e 0f10 1112 1314  ................
00000030: 1516 1718 191a 1b1c 1d1e 1f20 2122 2324  ........... !"#$
00000040: 2526 2728 292a 2b2c 2d2e 2f30 3132 3334  %&'()*+,-./01234
00000050: 3536 3738 393a 3b3c 3d3e 3f40 4142 4344  56789:;<=>?@ABCD
00000060: 4546 4748 494a 4b4c 4d4e 4f50 5152 5354  EFGHIJKLMNOPQRST
00000070: 5556 5758 595a 5b5c 5d5e 5f60 6162 6364  UVWXYZ[\\]^_`abcd
00000080: 6566 6768 696a 6b6c 6d6e 6f70 7172 7374  efghijklmnopqrst
00000090: 7576 7778 797a 7b7c 7d7e 7f80 8182 8384  uvwxyz{|}~......
000000a0: 8586 8788 898a 8b8c 8d8e 8f90 9192 9394  ................
000000b0: 9596 9798 999a 9b9c 9d9e 9fa0 a1a2 a3a4  ................
000000c0: a5a6 a7a8 a9aa abac adae afb0 b1b2 b3b4  ................
000000d0: b5b6 b7b8 b9ba bbbc bdbe bfc0 c1c2 c3c4  ................
000000e0: c5c6 c7c8 c9ca cbcc cdce cfd0 d1d2 d3d4  ................
000000f0: d5d6 d7d8 d9da dbdc ddde dfe0 e1e2 e3e4  ................
00000100: e5e6 e7e8 e9ea ebec edee eff0 f1f2 f3f4  ................
00000110: f5f6 f7f8 f9fa fbfc fdfe ff9d 6337 2d72  ............c7-r
00000120: 2d2d 2d77 2d72 2d2d 0900 6865 6c6c 6f2e  ---w-r--..hello.
00000130: 7478 7438 0000 0000 0091 9766 cde8 21cf  txt8.......f..!.
00000140: 9b41 8b56 4c45 4941 a37f 0ca8 3cef ea83  .A.VLEIA....<...
00000150: 0f2c a832 eed5 bfce 9dd9 d074 d1a7 9a0c  .,.2.......t....
00000160: 3cf9 e9cf bb6e 5ddd 170a 9c63 372d 722d  <....n]....c7-r-
00000170: 2d2d 772d 722d 2d10 006c 6173 745f 676f  --w-r--..last_go
00000180: 6f64 6279 652e 7478 74a6 0000 0000 00a9  odbye.txt.......
00000190: a34f 341a 79a0 dfd7 920d 9879 f441 9f7e  .O4.y......y.A.~
000001a0: fc98 bce5 1525 068c 3d32 a0e9 bd06 6cb9  .....%..=2....l.
000001b0: 7620 e9a3 2a0d 9bfb 6541 8b2f 4ef9 72ee  v ..*...eA./N.r.
...


The difference between your output(-) and the correct output(+) is:
...
  00000120: 2d2d 2d77 2d72 2d2d 0900 6865 6c6c 6f2e  ---w-r--..hello.
- 00000130: 7478 7438 0000 0000 0048 656c 6c6f 2043  txt8.....Hello C
- 00000140: 4f4d 5031 3532 310a 4920 686f 7065 2079  OMP1521.I hope y
- 00000150: 6f75 2061 7265 2065 6e6a 6f79 696e 6720  ou are enjoying 
- 00000160: 7468 6973 2061 7373 6967 6e6d 656e 742e  this assignment.
+ 00000130: 7478 7438 0000 0000 0091 9766 cde8 21cf  txt8.......f..!.
+ 00000140: 9b41 8b56 4c45 4941 a37f 0ca8 3cef ea83  .A.VLEIA....<...
+ 00000150: 0f2c a832 eed5 bfce 9dd9 d074 d1a7 9a0c  .,.2.......t....
+ 00000160: 3cf9 e9cf bb6e 5ddd 170a 9c63 372d 722d  <....n]....c7-r-
+ 00000170: 2d2d 772d 722d 2d10 006c 6173 745f 676f  --w-r--..last_go
+ 00000180: 6f64 6279 652e 7478 74a6 0000 0000 00a9  odbye.txt.......
+ 00000190: a34f 341a 79a0 dfd7 920d 9879 f441 9f7e  .O4.y......y.A.~
+ 000001a0: fc98 bce5 1525 068c 3d32 a0e9 bd06 6cb9  .....%..=2....l.
+ 000001b0: 7620 e9a3 2a0d 9bfb 6541 8b2f 4ef9 72ee  v ..*...eA./N.r.
+ 000001c0: 41d7 9a0c 9a72 8a85 d7a2 0d3d 13f3 41bf  A....r.....=..A.
+ 000001d0: b65e 42a5 75e7 d106 8cb8 7920 e9a3 4f34  .^B.u.....y ..O4
+ 000001e0: 1877 6441 d346 5dc8 24a7 d9b1 067d e2ac  .wdA.F].$....}..
+ 000001f0: efea 833e 1ed9 506d ca83 6efe 5950 74de  ...>..Pm..n.YPt.
+ 00000200: 8366 9ed9 5066 dfc8 54dd fcb2 a0e9 a30e  .f..Pf..T.......
+ 00000210: e41e 77f5 4fb3 620c bdb2 f241 af76 fee2  ..w.O.b....A.v..
- 00000170: 0a1d 6337 2d72 2d2d 2d77 2d72 2d2d 1000  ..c7-r---w-r--..
?      ^^    ^^^    ^                          ^  -     ^

+ 00000220: 80bc 6336 2d72 2d2d 2d77 2d72 2d2d 0e00  ..c6-r---w-r--..
?      ^^   + ^^    ^                          ^^       ^

+ 00000230: 7468 6573 655f 6461 7973 2e74 7874 9400  these_days.txt..
+ 00000240: 0000 0000 e6da b8a8 4a66 fb81 39eb 7cea  ........Jf..9.|.
+ 00000250: a44d 3ae4 4cf4 e6db b3b0 4c6e c2a1 2e12  .M:.L.....Ln....
+ 00000260: d9a9 135c 66cf 3aa9 0a8d 33e7 7d31 13ca  ...\f.:...3.}1..
+ 00000270: b1c4 4bb9 2f81 38c6 ed75 bb3b 04de eb2d  ..K./.8..u.;...-
+ 00000280: e44e 6ddf 4eac b44c be12 d9b3 a780 b9b6  .Nm.N..L........
You can reproduce this test by executing these commands:
  dcc -fsanitize=address -o chicken $(ls *.c|grep -vF chicken.c) chicken.c
  rm -rf tmp
  mkdir tmp
  cd tmp
  umask 0000
  cp ../examples/4_files.d/*.* .
  chmod 424 *.*
  ../chicken -c 4_files.egg 256.bin
  ../chicken -7 -a 4_files.egg hello.txt last_goodbye.txt
  ../chicken -6 -a 4_files.egg these_days.txt
  xxd 4_files.egg
  rm -rf tmp
  umask 0027
14 tests passed 13 tests failed
